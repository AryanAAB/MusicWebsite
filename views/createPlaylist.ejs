<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rhythm Realm</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="icon" href="images/favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "3000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
    </script>
    <style>
        .custom-colored-btn {
            background-color: #eb03d0;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .custom-colored-btn:hover {
            background-color: #c600a8;
            color: #fff;
        }

        .custom-colored-btn:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(235, 3, 208, 0.5);
            color: #fff;
        }

        .custom-colored-btn2 {
            background-color: #ff6f00;
            color: #ffffff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
        }

        .custom-colored-btn2:hover {
            background-color: #e65c00;
            color: #ffffff;
        }

        .custom-colored-btn2:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(255, 111, 0, 0.5);
            color: #ffffff;
        }
    </style>
</head>
<body>
    <div class="content">
        <div class="header">
            <div class="logo-container">
                <a href="/profile" class="logo">
                    <img src="images/logo.jpeg" alt="Rhythm Realm" class="logoImage">
                </a>
            </div>
            <p class="music-name-profile">Rhythm Realm Create Playlists</p>
            <div id="header-middle"></div>
            <div class="header-right">
                <div class="menu-toggle" id="menuToggle">
                    <input type="checkbox" />
                    <span></span>
                    <span></span>
                    <span></span>
                    <ul id="menu">
                        <li>
                            <button id="profileButton" class="btn btn-success">
                                <i class="fas fa-user"></i> Your Profile
                            </button>
                        </li>
                        <li>
                            <button id="messagesButton" class="btn btn-warning">
                                <i class="fas fa-bell"></i> Notifications
                            </button>
                        </li>
                        <li>
                            <button id="joinMeetingRoomButton" class="btn custom-colored-btn2">
                                <i class="fas fa-headphones"></i> Join Meeting Room
                            </button>
                        </li>
                        <li>
                            <button id="createMusicButton" class="btn custom-colored-btn">
                                <i class="fas fa-headphones"></i> Create Your Music
                            </button>
                        </li>
                        <li>
                            <button id="jamButton" class="btn btn-secondary">
                                <i class="fas fa-user-friends"></i> View Jam Mates
                            </button>
                        </li>
                        <li>
                            <button id="playListButton" class="btn btn-dark">
                                <i class="fas fa-record-vinyl"></i> View Playlists
                            </button>
                        </li>
                        <li>
                            <button id="createEventButton" class="btn btn-primary">
                                <i class="fas fa-calendar-plus"></i> Create Event
                            </button>
                        </li>
                        <li>
                            <button id="viewEventsButton" class="btn btn-info">
                                <i class="fas fa-calendar"></i> View Events
                            </button>
                        </li>
                        <li>
                            <button id="logoutButton" class="btn btn-danger">
                                <i class="fas fa-running"></i> Logout
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="spinner-container" id="spinnerContainer">
            <div class="spinner"></div>
        </div>

        <form id="playlistForm">
            <input type="text" id="name" placeholder="Playlist Name" required>
            <textarea id="description" placeholder="Description" required></textarea>
            <div id="trackContainer">
            </div>
            <button type="button" onclick="addTrack()">+ Add Track</button>
            <button type="submit">Create Playlist</button>
        </form>

        <div class="footer">
            <p>&copy; 2024 Rhythm Realm. All rights reserved.</p>
        </div>
    </div>
    <script>
        window.onload = async function() {
            document.getElementById('spinnerContainer').style.display = 'flex';

            try {
                const token = localStorage.getItem('token');
                const response = await fetch('/api/profile', {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });

                if (!response.ok) {
                    throw new Error('Failed to fetch profile');
                }
                document.getElementById('spinnerContainer').style.display = 'none';
            } catch (error) {
                localStorage.setItem('failed', true);
                document.getElementById('spinnerContainer').style.display = 'none';
                window.location.href = '/';
            }
        };
        
        let trackCount = 0;

        function addTrack() {
            const trackContainer = document.getElementById('trackContainer');
            const trackDiv = document.createElement('div');
            trackDiv.classList.add('track-div');
            trackDiv.id = `track-${trackCount}`;
            trackDiv.innerHTML = `
                <input type="text" name="title-${trackCount}" placeholder="Track Title" required>
                <input type="text" name="artist-${trackCount}" placeholder="Artist">
                <input type="text" name="album-${trackCount}" placeholder="Album">
                <input type="text" name="url-${trackCount}" placeholder="Track URL">
                <span class="remove-track" onclick="removeTrack(${trackCount})">Remove</span>
            `;
            trackContainer.appendChild(trackDiv);
            trackCount++;
        }

        function removeTrack(trackId) {
            const trackDiv = document.getElementById(`track-${trackId}`);
            trackDiv.remove();
        }

        document.getElementById('playlistForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const token = localStorage.getItem('token');

            const name = document.getElementById('name').value;
            const description = document.getElementById('description').value;
            const trackElements = document.querySelectorAll('#trackContainer .track-div');

            if(trackElements.length === 0){
                toastr.error("Please add at least 1 track to the playlist.");
                return;
            }

            const trackIds = [];

            for (const trackElement of trackElements) {
                const title = trackElement.querySelector(`input[name^="title-"]`).value;
                const artist = trackElement.querySelector(`input[name^="artist-"]`).value;
                const album = trackElement.querySelector(`input[name^="album-"]`).value;
                const url = trackElement.querySelector(`input[name^="url-"]`).value;

                const trackResponse = await fetch('/api/playlists/tracks', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({ title, artist, album, url }),
                });

                const track = await trackResponse.json();
                trackIds.push(track._id);
            }

            const response = await fetch('/api/playlists/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ name, description, trackIds }),
            });

            const result = await response.json();
            if (response.ok) {
                toastr.success("Playlist Created successfully.");
                document.getElementById('playlistForm').reset();
                document.getElementById('trackContainer').innerHTML = '';
                trackCount = 0;
            } else {
                toastr.error("Error in creating the playlist. Make sure that you have at least 1 track.");
            }
        });

        document.getElementById('menuToggle').addEventListener('click', function() {
            var menu = document.getElementById('menu');
            var checkbox = document.querySelector('.menu-toggle input[type="checkbox"]');
            checkbox.checked = !checkbox.checked;
            if (checkbox.checked) {
                menu.style.display = 'block';
            } else {
                menu.style.display = 'none';
            }
        });
        document.addEventListener('click', function(event) {
            var isClickInsideMenu = menu.contains(event.target);
            var isClickOnToggle = menuToggle.contains(event.target);
            if (!isClickInsideMenu && !isClickOnToggle) {
                menu.style.display = 'none';
                var checkbox = document.querySelector('.menu-toggle input[type="checkbox"]');
                checkbox.checked = false;
            }
        });
        document.getElementById('logoutButton').addEventListener('click', () => {
            localStorage.clear();
            localStorage.setItem('logout', true);
            window.location.href = '/';
        });
        document.getElementById('jamButton').addEventListener('click', () => {
            window.location.href = '/users';
        });
        document.getElementById('messagesButton').addEventListener('click', () => {
            window.location.href = '/messages';
        });
        document.getElementById('viewEventsButton').addEventListener('click', () => {
            window.location.href = '/viewEvents';
        });
        document.getElementById('profileButton').addEventListener('click', () => {
            window.location.href = '/profile';
        });
        document.getElementById('createEventButton').addEventListener('click', () => {
            window.location.href = '/createEvent';
        });
        document.getElementById('playListButton').addEventListener('click', () => {
            window.location.href = '/playlists';
        });
        document.getElementById('createMusicButton').addEventListener('click', () => {
            window.location.href = '/createMusic';
        });
        document.getElementById('joinMeetingRoomButton').addEventListener('click', () => {
            window.location.href = '/meetingRoom';
        });
    </script>
</body>
</html>
